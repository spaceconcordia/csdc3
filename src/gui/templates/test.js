var chartstrain0 = new CanvasJS.Chart("chartPayloadStrain0",{ animationEnabled: true, title:{ text: "1. Strain VS. Time"}, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 }, axisY:{ title: "Strain" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 1 - Strain", xValueType: "dateTime", dataPoints: (payload_data["p0"])["strainConvList"] }  ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; }  chartstrain0.render(); }}}); chartstrain0.render(); var chartload0 = new CanvasJS.Chart("chartPayloadLoad0", { animationEnabled: true, title:{ text: " 1. Load(N) VS. Time" }, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 },  axisY:{ title: "Load(N)" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 1 - Load", xValueType: "dateTime", dataPoints: (payload_data["p0"])["loadConvList"] } ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; } chartload0.render(); }}}); chartload0.render(); var charttemp0 = new CanvasJS.Chart("chartPayloadTemp0", { animationEnabled: true, title:{ text: " 1. Temp VS. Time" }, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 }, axisY:{ title: "Temperature °C" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 1 - Temperature", xValueType: "dateTime", dataPoints: (payload_data["p0"])["tempList"] } ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; } charttemp0.render(); }} }); charttemp0.render();var chartstrain1 = new CanvasJS.Chart("chartPayloadStrain1",{ animationEnabled: true, title:{ text: "2. Strain VS. Time"}, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 }, axisY:{ title: "Strain" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 2 - Strain", xValueType: "dateTime", dataPoints: (payload_data["p1"])["strainConvList"] }  ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; }  chartstrain1.render(); }}}); chartstrain1.render(); var chartload1 = new CanvasJS.Chart("chartPayloadLoad1", { animationEnabled: true, title:{ text: " 2. Load(N) VS. Time" }, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 },  axisY:{ title: "Load(N)" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 2 - Load", xValueType: "dateTime", dataPoints: (payload_data["p1"])["loadConvList"] } ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; } chartload1.render(); }}}); chartload1.render(); var charttemp1 = new CanvasJS.Chart("chartPayloadTemp1", { animationEnabled: true, title:{ text: " 2. Temp VS. Time" }, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 }, axisY:{ title: "Temperature °C" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 2 - Temperature", xValueType: "dateTime", dataPoints: (payload_data["p1"])["tempList"] } ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; } charttemp1.render(); }} }); charttemp1.render();var chartstrain2 = new CanvasJS.Chart("chartPayloadStrain2",{ animationEnabled: true, title:{ text: "3. Strain VS. Time"}, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 }, axisY:{ title: "Strain" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 3 - Strain", xValueType: "dateTime", dataPoints: (payload_data["p2"])["strainConvList"] }  ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; }  chartstrain2.render(); }}}); chartstrain2.render(); var chartload2 = new CanvasJS.Chart("chartPayloadLoad2", { animationEnabled: true, title:{ text: " 3. Load(N) VS. Time" }, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 },  axisY:{ title: "Load(N)" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 3 - Load", xValueType: "dateTime", dataPoints: (payload_data["p2"])["loadConvList"] } ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; } chartload2.render(); }}}); chartload2.render(); var charttemp2 = new CanvasJS.Chart("chartPayloadTemp2", { animationEnabled: true, title:{ text: " 3. Temp VS. Time" }, axisX:{valueFormatString: "DD-MMM hh:mm:ss", labelAngle: -50,  title: "time(sec)", intervalType: "second", interval:6 }, axisY:{ title: "Temperature °C" }, data: [ { type: "spline", showInLegend: true, name: "series1", legendText: "Payload Exp 3 - Temperature", xValueType: "dateTime", dataPoints: (payload_data["p2"])["tempList"] } ], legend: { cursor: "pointer", itemclick: function (e) { if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) { e.dataSeries.visible = false; } else { e.dataSeries.visible = true; } charttemp2.render(); }} }); charttemp2.render();</script>
